
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00_basic/example_03_show_object_properties.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_00_basic_example_03_show_object_properties.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00_basic_example_03_show_object_properties.py:

.. _ref_example_03_show_object_properties:

Display properties for an object
---------------------------------

Using supplied files, this example shows how to display the properties
that you would see in an object's details view in the Mechanical GUI.

.. GENERATED FROM PYTHON SOURCE LINES 34-37

Download required files
~~~~~~~~~~~~~~~~~~~~~~~
Download the required files. Print the file path for the MECHDAT file.

.. GENERATED FROM PYTHON SOURCE LINES 37-48

.. code-block:: Python


    import os

    from ansys.mechanical.core import launch_mechanical
    from ansys.mechanical.core.examples import download_file

    mechdat_path = download_file(
        "example_03_simple_bolt_new.mechdat", "pymechanical", "00_basic"
    )
    print(f"Downloaded the MECHDAT file to: {mechdat_path}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloaded the MECHDAT file to: /home/runner/.local/share/ansys_mechanical_core/examples/example_03_simple_bolt_new.mechdat




.. GENERATED FROM PYTHON SOURCE LINES 49-54

Launch Mechanical
~~~~~~~~~~~~~~~~~
Launch a new Mechanical session in batch, setting the ``cleanup_on_exit``
argument to ``False``. To close this Mechanical session when finished,
this example must call  the ``mechanical.exit()`` method.

.. GENERATED FROM PYTHON SOURCE LINES 54-58

.. code-block:: Python


    mechanical = launch_mechanical(batch=True, cleanup_on_exit=False)
    print(mechanical)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Ansys Mechanical [Ansys Mechanical Enterprise]
    Product Version:251
    Software build date: 11/27/2024 09:34:44





.. GENERATED FROM PYTHON SOURCE LINES 59-63

Initialize the variable needed for this workflow
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set the path for the ``mechdat_path`` variable for later use.
Make this variable compatible for Windows, Linux, and Docker containers.

.. GENERATED FROM PYTHON SOURCE LINES 63-80

.. code-block:: Python


    project_directory = mechanical.project_directory
    print(f"project directory = {project_directory}")

    # Upload the file to the project directory.
    mechanical.upload(file_name=mechdat_path, file_location_destination=project_directory)

    # Build the path relative to project directory.
    base_name = os.path.basename(mechdat_path)
    combined_path = os.path.join(project_directory, base_name)
    mechdat_path_modified = combined_path.replace("\\", "\\\\")
    mechanical.run_python_script(f"mechdat_path='{mechdat_path_modified}'")

    # Verify the path.
    result = mechanical.run_python_script(f"mechdat_path")
    print(f"MECHDATA file is stored on the server at: {result}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    project directory = /tmp/ANSYS.root.1/AnsysMech847A/Project_Mech_Files/
    Uploading example_03_simple_bolt_new.mechdat to dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMech847A/Project_Mech_Files/.:   0%|          | 0.00/7.06M [00:00<?, ?B/s]    Uploading example_03_simple_bolt_new.mechdat to dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMech847A/Project_Mech_Files/.: 100%|██████████| 7.06M/7.06M [00:00<00:00, 306MB/s]
    MECHDATA file is stored on the server at: /tmp/ANSYS.root.1/AnsysMech847A/Project_Mech_Files/example_03_simple_bolt_new.mechdat




.. GENERATED FROM PYTHON SOURCE LINES 81-85

Run the script
~~~~~~~~~~~~~~
Run the Mechanical script to display the properties and their current values
for the analysis object.

.. GENERATED FROM PYTHON SOURCE LINES 85-103

.. code-block:: Python


    result = mechanical.run_python_script(
        """
    import json

    ExtAPI.DataModel.Project.Open(mechdat_path)

    analysisSettings = Model.Analyses[0].AnalysisSettings
    props = {}
    if hasattr(analysisSettings,'VisibleProperties') != False:
        for prop in analysisSettings.VisibleProperties:
            props[prop.Caption] = prop.StringValue

    json.dumps(props, indent=1)
    """
    )
    print(f"AnalysisSettings properties:\n{result}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    AnalysisSettings properties:
    {
     "Contact Summary": "Program Controlled", 
     "Delete Unneeded Files": "Yes", 
     "Volume and Energy": "Yes", 
     "Nonlinear Data": "No", 
     "Combine Restart Files": "Program Controlled", 
     "Force Convergence": "Program Controlled", 
     "Step End Time": "1. s", 
     "Rotation Convergence": "Program Controlled", 
     "Solver Unit System": "mks", 
     "Output Selection": "None", 
     "Generate Restart Points": "Program Controlled", 
     "Coriolis Effect": "Off", 
     "Number Of Steps": "10.", 
     "Contact Data": "Yes", 
     "Inverse Option": "No", 
     "Auto Time Stepping": "Program Controlled", 
     "Stress": "Yes", 
     "Strain": "Yes", 
     "Result File Compression": "Program Controlled", 
     "Future Analysis": "None", 
     "Solver Units": "Active System", 
     "Large Deflection": "Off", 
     "Back Stress": "No", 
     "General Miscellaneous": "No", 
     "Scratch Solver Files Directory": "", 
     "Nodal Forces": "No", 
     "Save MAPDL db": "No", 
     "Nonlinear Solution": "No", 
     "Current Step Number": "1.", 
     "Euler Angles": "Yes", 
     "Store Results At": "All Time Points", 
     "Newton-Raphson Option": "Program Controlled", 
     "Moment Convergence": "Program Controlled", 
     "Solver Type": "Program Controlled", 
     "Inertia Relief": "Off", 
     "Weak Springs": "Off", 
     "Solver Pivot Checking": "Program Controlled", 
     "Contact Miscellaneous": "No", 
     "Solver Files Directory": "/tmp/ANSYS.root.1/AnsysMech847A/Project_Mech_Files/example_03_simple_bolt_new_Mech_Files/Static Structural (2)/", 
     "Stabilization": "Program Controlled", 
     "Contact Split (DMP)": "Off", 
     "Line Search": "Program Controlled", 
     "Quasi-Static Solution": "Off", 
     "Retain Files After Full Solve": "No", 
     "Displacement Convergence": "Program Controlled"
    }




.. GENERATED FROM PYTHON SOURCE LINES 104-107

Clear the data
~~~~~~~~~~~~~~
Clear the data so it isn't saved to the project.

.. GENERATED FROM PYTHON SOURCE LINES 107-110

.. code-block:: Python


    mechanical.clear()








.. GENERATED FROM PYTHON SOURCE LINES 111-114

Close Mechanical
~~~~~~~~~~~~~~~~
Close the Mechanical instance.

.. GENERATED FROM PYTHON SOURCE LINES 114-116

.. code-block:: Python


    mechanical.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.127 seconds)


.. _sphx_glr_download_examples_00_basic_example_03_show_object_properties.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_03_show_object_properties.ipynb <example_03_show_object_properties.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_03_show_object_properties.py <example_03_show_object_properties.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: example_03_show_object_properties.zip <example_03_show_object_properties.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
