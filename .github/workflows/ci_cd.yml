name: CI

on:
  workflow_dispatch:
#  schedule: # UTC at 0300
#    - cron: "0 3 * * *"
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.10'
  PYMECHANICAL_PORT: 10000  # default won't work on GitHub runners
  PYMECHANICAL_START_INSTANCE: FALSE
  DOCKER_PACKAGE: ghcr.io/pyansys/pymechanical/mechanical
  DOCKER_IMAGE_VERSION: v23.1.0
  DOCKER_MECH_CONTAINER_NAME: mechanical
  PACKAGE_NAME: ansys-mechanical-core
  PACKAGE_NAMESPACE: ansys.mechanical.core
  RESET_EXAMPLES_CACHE: 0
  RESET_DOC_BUILD_CACHE: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  packages: read

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: pyansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: pyansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Documentation
    needs: [style, docs-style]
    runs-on: ubuntu-latest-8-cores
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-extra latexmk nodejs npm graphviz
          npm install -g @mermaid-js/mermaid-cli

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip tox

      - name: Login in Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull, launch, and validate Mechanical service
        env:
          LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}
          MECHANICAL_IMAGE: ${{ env.DOCKER_PACKAGE }}:${{ env.DOCKER_IMAGE_VERSION }}
        run: |
          echo CPU info
          lscpu
          docker pull ${{ env.MECHANICAL_IMAGE }}
          docker run --restart always --name ${{ env.DOCKER_MECH_CONTAINER_NAME }} -e ANSYSLMD_LICENSE_FILE=1055@${{ env.LICENSE_SERVER }} -p ${{ env.PYMECHANICAL_PORT }}:10000 ${{ env.MECHANICAL_IMAGE }} > log.txt &
          grep -q 'WB Initialize Done' <(timeout 60 tail -f log.txt)

      - name: Build HTML documentation
        run: tox -e doc

      - name: Build PDF Documentation
        run: |
          sudo apt update
          sudo apt-get install -y texlive-latex-extra latexmk
          python -m pip install -r requirements/requirements_doc.txt
          make -C doc pdf

      - name: Upload HTML documentation
        uses: actions/upload-artifact@v3.1.0
        with:
          name: HTML-Documentation
          path: .tox/doc_out_html/
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v3.1.0
        with:
          name: PDF-Documentation
          path: doc/build/latex/*.pdf
          retention-days: 7

      - name: Get Mechanical container logs
        if: always()
        run: docker logs ${{ env.DOCKER_MECH_CONTAINER_NAME }} > mechanical_documentation_log.txt 2>&1

      - name: Upload container logs
        uses: actions/upload-artifact@v3
        with:
          name: mechanical_documentation_log
          path: mechanical_documentation_log.txt
          retention-days: 7

#      - name: Deploy to gh-pages
#        if: github.event_name == 'push'
#        uses: JamesIves/github-pages-deploy-action@4.3.4
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          BRANCH: gh-pages
#          FOLDER: .tox/doc_out_html/
#          CLEAN: true
#          SINGLE_COMMIT: true
